syntax = "proto3";
package fx.dex.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/marginxio/marginx/x/dex/types";

//BOTH for query
enum Direction {
    option (gogoproto.goproto_enum_stringer) = true;
    option (gogoproto.goproto_enum_prefix)   = false;

  BOTH  = 0 [(gogoproto.enumvalue_customname) = "BOTH"];
  BUY = 1 [(gogoproto.enumvalue_customname) = "BUY"];
  SELL  = 2 [(gogoproto.enumvalue_customname) = "SELL"];
  MarketBuy  = 3 [(gogoproto.enumvalue_customname) = "MarketBuy"];
  MarketSell  = 4 [(gogoproto.enumvalue_customname) = "MarketSell"];
}

enum OrderStatus {
    option (gogoproto.goproto_enum_stringer) = true;
    option (gogoproto.goproto_enum_prefix)   = false;

    ORDER_PENDING = 0 [(gogoproto.enumvalue_customname) = "ORDER_PENDING"];
    ORDER_FILLED  = 1 [(gogoproto.enumvalue_customname) = "ORDER_FILLED"];
    ORDER_PARTIAL_FILLED  = 2 [(gogoproto.enumvalue_customname) = "ORDER_PARTIAL_FILLED"];
    ORDER_CANCELLED  = 3 [(gogoproto.enumvalue_customname) = "ORDER_CANCELLED"];
    ORDER_PARTIAL_FILLED_CANCELLED  = 4 [(gogoproto.enumvalue_customname) = "ORDER_PARTIAL_FILLED_CANCELLED"];
    ORDER_PARTIAL_FILLED_EXPIRED  = 5 [(gogoproto.enumvalue_customname) = "ORDER_PARTIAL_FILLED_EXPIRED"];
    ORDER_EXPIRED  = 6 [(gogoproto.enumvalue_customname) = "ORDER_EXPIRED"];
    ORDER_GASOUT = 7 [(gogoproto.enumvalue_customname) = "ORDER_GASOUT"];
    ORDER_PRICE_LIMIT  = 8 [(gogoproto.enumvalue_customname) = "ORDER_PRICE_LIMIT"];
}

enum OrderType {
    option (gogoproto.goproto_enum_stringer) = true;
    option (gogoproto.goproto_enum_prefix)   = false;

    ORDER_TYPE_OPEN_POSITION = 0 [(gogoproto.enumvalue_customname) = "ORDER_TYPE_OPEN_POSITION"];
    ORDER_TYPE_CLOSE_POSITION = 1 [(gogoproto.enumvalue_customname) = "ORDER_TYPE_CLOSE_POSITION"];
    ORDER_TYPE_LIQUIDATION = 2 [(gogoproto.enumvalue_customname) = "ORDER_TYPE_LIQUIDATION"];
}

message OrderIDs {
    repeated string ids = 1;
}

message Order {
    string id = 1 ;
    bytes owner = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    string pair_id = 3;
    Direction direction = 4;
    string price = 5 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    string base_quantity = 6 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    string quote_quantity = 7 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    string filled_quantity = 8 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    string filled_avg_price = 9 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    int64 leverage = 10;
    OrderStatus status = 11;
    OrderType order_type = 12;
    string cost_fee = 13 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
        (gogoproto.nullable) = false
    ];
    string locked_fee = 14 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
        (gogoproto.nullable) = false
    ];
}

message Orders {
    repeated Order orders = 1 [(gogoproto.nullable) = false];
}


