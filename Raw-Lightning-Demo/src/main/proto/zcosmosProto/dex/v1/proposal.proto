syntax = "proto3";
package fx.dex.v1;

import "gogoproto/gogo.proto";
import "dex/v1/funding.proto";
import "dex/v1/margin.proto";

option go_package = "github.com/marginxio/marginx/x/dex/types";

message ResetFundingTimeProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  FundingTime funding_time = 3;
}

message ResetFundingParamsProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  Funding funding_params = 3;
}

message ResetMMATableProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  repeated MarginRate margin_rate = 3;
  repeated InitMarginRate init_margin_rate = 4;
}

message CreatePairProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  Pair pair = 3;
}

message Pair {
  string base_asset = 1;
  string quote_asset = 2;
  bool active = 3;
  int64 price_decimal = 4;
  int64 position_decimal = 5;
  string init_price = 6;
  string market_type = 7; //Crypto or Stock
}

message ResetPremiumIndexConfigProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  PremiumIndexConf premium_index_conf = 3;
}

message ShareSplitProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  string multiplier = 3;
  string pair_id = 4;
}
